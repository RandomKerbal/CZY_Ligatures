# === classes ===
@letters        = [a b c d e f g h i j k l m n o p q r s t u v w x y z ae oe A B C D E F G H I J K L M N O P Q R S T U V W X Y Z AE OE alpha beta gamma delta epsilon zeta eta theta iota kappa lambda uni03BC nu xi omicron pi rho sigma uni03C2 tau upsilon phi chi psi omega Alpha Beta Gamma uni0394 Epsilon Zeta Eta Theta Iota Kappa Lambda Mu Nu Xi Omicron Pi Rho Sigma Tau Upsilon Phi Chi Psi uni03A9];  # unicodes: final sigma, Delta, Omega
@digits         = [zero one two three four five six seven eight nine];
@digits_sup	    = [uni2070 uni00B9 uni00B2 uni00B3 uni2074 uni2075 uni2076 uni2077 uni2078 uni2079];
@dec            = [@digits period];
@dec_sup        = [@digits_sup periodcentered];
@punct          = [underscore period colon comma semicolon quotesingle quotedbl question exclam at numbersign dollar percent asciitilde asciicircum ampersand
                   asterisk hyphen plus slash backslash less equal greater parenleft parenright bracketleft bracketright braceleft braceright bar grave];
@set_containers = [quotesingle quotedbl parenleft parenright bracketleft bracketright braceleft braceright];
@char           = [@letters @digits];
@char_sep       = [@char underscore space];

# === functions ===
# sub exponents to superscript (sup)
lookup power_sub {
	sub asterisk' asterisk' zero' by uni2070;
	sub asterisk' asterisk' one' by uni00B9;
	sub asterisk' asterisk' two' by uni00B2;
	sub asterisk' asterisk' three' by uni00B3;
	sub asterisk' asterisk' four' by uni2074;
	sub asterisk' asterisk' five' by uni2075;
	sub asterisk' asterisk' six' by uni2076;
	sub asterisk' asterisk' seven' by uni2077;
	sub asterisk' asterisk' eight' by uni2078;
	sub asterisk' asterisk' nine' by uni2079;
	sub asterisk' asterisk' period' by periodcentered;

	# after a superscript digit, keep turning further digits into superscript
	sub @dec_sup @dec' by @dec_sup;

} power_sub;

lookup main {

	# === functions ===
	sub @char asciicircum' @char by circleplus;
	sub @char space asciicircum' space @char by circleplus;

	ignore sub @char e' x p;
	ignore sub e' x p @char;
	sub e' x p by e asterisk;
	sub e asterisk x' p' by asterisk;

	ignore sub @char i' s' c' l' o' s' e';
	ignore sub i' s' c' l' o' s' e' @char;
	sub i' s' c' l' o' s' e' by approxequal;

	ignore sub @char p' r' o' d';
	ignore sub p' r' o' d' @char;
	sub p' r' o' d' by product;

	ignore sub @char s' e' t' parenleft' parenright';
	sub s' e' t' parenleft' parenright' by emptyset;

	ignore sub @char s' q' r' t';
	ignore sub s' q' r' t' @char;
	sub s' q' r' t' by radical;

	ignore sub @char s' u' m';
	ignore sub s' u' m' @char;
	sub s' u' m' by summation;

	# === set operations ===
    sub @punct i' s' s' u' b' s' e' t' @punct by reflexsubset;
    sub @punct i' s' s' u' p' e' r' s' e' t' @punct by reflexsuperset;
    sub @punct i' n' t' e' r' s' e' c' t' i' o' n' @punct by intersection;
    sub @punct u' n' i' o' n' @punct by union;
	sub @punct d' i' f' f' e' r' e' n' c' e' by emdash;
	sub @punct s' y' m' m' e' t' r' i' c' underscore' d' i' f' f' e' r' e' n' c' e' @punct by circleplus;

	# === lambda symbol ====
	ignore sub @char l' a' m' b' d' a';
	ignore sub l' a' m' b' d' a' @char;
	sub @punct l' a' m' b' d' a' by lambda;
	sub l' a' m' b' d' a' @punct by lambda;

	# === lambda function ===
	# put behind lambda symbols so only "space l a m b d a space" remains
	sub l' a m b d a by d e f space lambda;
	sub d e f space lambda a' m' b' d' a' by colon;	

	# === math greek letters ===
	ignore sub @char a' l' p' h' a';
	ignore sub a' l' p' h' a' @char;
	sub a' l' p' h' a' by uni237A;

	ignore sub @char b' e' t' a';
	ignore sub b' e' t' a' @char;
	sub b' e' t' a' by beta;

	ignore sub @char g' a' m' m' a';
	ignore sub g' a' m' m' a' @char;
	sub g' a' m' m' a' by gamma;

	ignore sub @char d' e' l' t' a';
	ignore sub d' e' l' t' a' @char;
	sub d' e' l' t' a' by uni0394;

	ignore sub @char e' p' s' i' l' o' n';
	ignore sub e' p' s' i' l' o' n' @char;
	sub e' p' s' i' l' o' n' by epsilon;

	ignore sub @char z' e' t' a';
	ignore sub z' e' t' a' @char;
	sub z' e' t' a' by zeta;

	ignore sub @char t' h' e' t' a';
	ignore sub t' h' e' t' a' @char;
	sub t' h' e' t' a' by theta;

	ignore sub @char m' u';
	ignore sub m' u' @char;
	sub m' u' by uni03BC;

	ignore sub @char p' i';
	ignore sub p' i' @char;
	sub p' i' by pi;

	ignore sub @char r' h' o';
	ignore sub r' h' o' @char;
	sub r' h' o' by uni2374;

	ignore sub @char s' i' g' m' a';
	ignore sub s' i' g' m' a' @char;
	sub s' i' g' m' a' by sigma;

	ignore sub @char t' a' u';
	ignore sub t' a' u' @char;
	sub t' a' u' by tau;

	ignore sub @char p' h' i';
	ignore sub p' h' i' @char;
	sub p' h' i' by uni03D5;

	ignore sub @char o' m' e' g' a';
	ignore sub o' m' e' g' a' @char;
	sub o' m' e' g' a' by uni2375;

	# === Comment/String ===
	ignore sub @char [i I]' n' f';
	ignore sub [i I]' n' f' @char;
	sub [i I]' n' f' by infinity;

	sub backslash n' by uni21A9;
	
	sub f' [i I] [x X] [m M] [e E] by uni26A0 f;
	sub F' [i I] [x X] [m M] [e E] by uni26A0 F;

	sub t' [o O] [d D] [o O] by uni26A0 t;
	sub T' [o O] [d D] [o O] by uni26A0 T;

	ignore sub @char d' [x y z];
	ignore sub d' [x y z] @char;
	sub d' [x y z] by uni0394;

	ignore sub @char [b B]' e' c' a' u' s' e';
	ignore sub [b B]' e' c' a' u' s' e' @char;
	sub [b B]' e' c' a' u' s' e' by uni2235;

	ignore sub @char [s S]' i' n' c' e';
	ignore sub [s S]' i' n' c' e' @char;
	sub [s S]' i' n' c' e' by uni2235;

	ignore sub @char [t T]' h' e' r' e' f' o' r' e';
	ignore sub [t T]' h' e' r' e' f' o' r' e' @char;
	sub [t T]' h' e' r' e' f' o' r' e' by therefore;

	sub [n N]' o' period' @digits by uni2116;
	sub [n N]' o' period' space @digits by uni2116;

	# === in not in ===
	# put behind comment/string to prevent inf symbol from ignore
    sub @set_containers space i' n' space by element;
    sub space i' n' space @set_containers by element;
	sub underscore i' n' underscore by element;

	# put behind to prevent @set_containers and "_in_" from ignore
	ignore sub @char_sep i' n';
	ignore sub i' n' @char_sep;
	sub i' n' by element;

    ignore sub @char n' o' t' space' i' n';
	ignore sub n' o' t' space' i' n' @char;
	sub n' o' t' space' i' n' by notelement;

} main;

# === main ===
feature calt {
	lookup power_sub;
	lookup main;
} calt;